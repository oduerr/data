name: Render and Deploy All Quarto Documents

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  render:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.MY_GITHUB_PAT }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Git user
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Verify the PAT is set
      run: echo "Checking PAT: ${{ secrets.MY_GITHUB_PAT }}"

    - name: Create a test file
      run: echo "This is a test file fuer debugging" > testfile.txt

    - name: Add and commit the test file
      run: |
        git add testfile.txt
        git commit -m 'Add test file for debugging'

    - name: Push the test file to the main branch
      run: |
        git remote set-url origin https://x-access-token:${{ secrets.MY_GITHUB_PAT }}@github.com/tensorchiefs/data.git
        git push origin main

    - name: Fetch all branches
      run: git fetch --all

    - name: Check if docs branch exists
      id: check_docs_branch
      run: |
        if git show-ref --verify --quiet refs/remotes/origin/docs; then
          echo "branch_exists=true" >> $GITHUB_ENV
        else
          echo "branch_exists=false" >> $GITHUB_ENV
        fi

    - name: Create docs branch if it does not exist
      if: env.branch_exists == 'false'
      run: |
        git checkout -b docs
        git push origin docs

    - name: Checkout docs branch if it exists
      if: env.branch_exists == 'true'
      run: |
        git checkout docs

    - name: Set up R
      uses: r-lib/actions/setup-r@v2

    - name: Set up Quarto
      uses: quarto-dev/quarto-actions/setup@v2

    - name: Install specific R packages
      run: |
        Rscript -e 'install.packages(c("rmarkdown", "ggplot2", "remotes"))'
        Rscript -e 'remotes::install_github("tensorchiefs/data", subdir = "R/edudat", dependencies = TRUE, upgrade = "always", verbose = TRUE)'

    - name: Render QMD files
      run: |
        quarto render data/*.qmd --to gfm
    
    - name: Commit and push rendered files to docs branch
      run: |
        cp -r data/* .
        git add .
        git commit -m 'Update rendered documentation' || echo "No changes to commit"
        git push origin docs
